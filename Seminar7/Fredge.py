##################################################################################################################################
# Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников. Теперь он использует их в качестве 
# серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники. Для каждого холодильника существует 
# строка с данными, состоящая из строчных букв и цифр, и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы,
#  главное наличие последовательности букв), то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы
##################################################################################################################################

# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n
# Sample Output 1:
# 1 2 3
# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton
# Sample Output 2:
# 1 2 7 8

n = int(input())
# list1 = []
# for i in range(n):
#     a = input()
#     if 'a' in a:
#         a = a[a.find('a'):]
#         if 'n' in a:
#             a = a[a.find('n'):]
#             if 't' in a:
#                 a = a[a.find('t'):]
#                 if 'o' in a:
#                     a = a[a.find('o'):]
#                     if 'n' in a:
#                         list1.append(i + 1)
# print(*list1)


# for i in range(int(input())):
#     s, virus, x = input(), 'anton', 0
#     for sym in s:
#         if sym == virus[x]:
#             x += 1
#         if x == 5:
#             print(i + 1, end=' ')
#             break

# **Задание в группах:** Создать телефонный справочник с возможностью импорта и экспорта данных в нескольких форматах.
# - *под форматами понимаем структуру файлов, например:в файле на одной строке хранится одна часть записи, пустая строка - разделитель


#     *Фамилия_1*
#     *Имя_1*
#     *Телефон_1*
#     *Описание_1*
#     *Фамилия_2*
#     *Имя_2*
#     *Телефон_2*
#     *Описание_2*
#     *и т.д.в файле на одной строке хранится все записи, символ разделитель - ;
#     *Фамилия_1,Имя_1,Телефон_1,Описание_1*
#     *Фамилия_2,Имя_2,Телефон_2,Описание_2*
# def show_menu() -> int:
#     print("\nВыберите необходимое действие:\n"
#           "1. Отобразить весь справочник\n"
#           "2. Найти абонента по фамилии\n"
#           "3. Найти абонента по номеру телефона\n"
#           "4. Добавить абонента в справочник\n"
#           "5. Сохранить справочник в текстовом формате\n"
#           "6. Закончить работу")
#     choice = int(input())
#     return choice


# def read_csv(filename: str) -> list:
#     data = []
#     fields = ["Фамилия", "Имя", "Телефон", "Описание"]
#     with open(filename, 'r', encoding='utf-8') as fin:
#         for line in fin:
#             record = dict(zip(fields, line.strip().split(',')))
#             data.append(record)

# # Николай(продолжение)
# **Задача:** Создать калькулятор для работы с рациональными и комплексными числами, организовать меню, добавив в неё систему логирования.
# В рамках этого обсуждения студентам надо нарисовать “архитектуру” (например, в виде блок-схемы) для работы данного приложения.
# Комплексные числа
# сложение : 4 + 4i + 3 + 5i = 7 + 9i
# разница 5 + 4i - (7 + 2i) = -2 + 2i
# умножение (4 + 2i) * (3 + 5i) = 12 + 20i + 6i + 10i^2 = 12 + 26i + 10 *(-1) = 12 + 26i - 10 = 2 + 26i
# делене (20 + 4i) * (5 + 2i) = 4 + 2i

# Встроенная функция complex()
# Встроенная функция complex(real[, imag]) позволяет создать комплексное число на основе значений его действительной и мнимой частей:
# >>> complex(1)    #  аргумент imag не обязателен
# (1+0j)
# >>>
# >>> complex(1, 2e-2)
# (1+0.02j)
# Приятным сюрпризом данной функции, является то что она может создавать комплексное число из строки. Но с небольшой оговоркой, эта строка должна быть допустимым литералом комплексного числа:

Komp_mult.py
Komp_sum.py
Komp_div.py
Komp_sub.py
